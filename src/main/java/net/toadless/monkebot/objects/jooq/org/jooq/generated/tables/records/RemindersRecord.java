/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.generated.tables.Reminders;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemindersRecord extends UpdatableRecordImpl<RemindersRecord> implements Record6<Long, Long, Long, Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.reminders.id</code>.
     */
    public RemindersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.reminders.guild_id</code>.
     */
    public RemindersRecord setGuildId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.guild_id</code>.
     */
    public Long getGuildId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.reminders.user_id</code>.
     */
    public RemindersRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.reminders.channel_id</code>.
     */
    public RemindersRecord setChannelId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.channel_id</code>.
     */
    public Long getChannelId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.reminders.reminder_text</code>.
     */
    public RemindersRecord setReminderText(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.reminder_text</code>.
     */
    public String getReminderText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.reminders.expiry</code>.
     */
    public RemindersRecord setExpiry(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.reminders.expiry</code>.
     */
    public LocalDateTime getExpiry() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, Long, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Reminders.REMINDERS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Reminders.REMINDERS.GUILD_ID;
    }

    @Override
    public Field<Long> field3() {
        return Reminders.REMINDERS.USER_ID;
    }

    @Override
    public Field<Long> field4() {
        return Reminders.REMINDERS.CHANNEL_ID;
    }

    @Override
    public Field<String> field5() {
        return Reminders.REMINDERS.REMINDER_TEXT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Reminders.REMINDERS.EXPIRY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGuildId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Long component4() {
        return getChannelId();
    }

    @Override
    public String component5() {
        return getReminderText();
    }

    @Override
    public LocalDateTime component6() {
        return getExpiry();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGuildId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public Long value4() {
        return getChannelId();
    }

    @Override
    public String value5() {
        return getReminderText();
    }

    @Override
    public LocalDateTime value6() {
        return getExpiry();
    }

    @Override
    public RemindersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RemindersRecord value2(Long value) {
        setGuildId(value);
        return this;
    }

    @Override
    public RemindersRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public RemindersRecord value4(Long value) {
        setChannelId(value);
        return this;
    }

    @Override
    public RemindersRecord value5(String value) {
        setReminderText(value);
        return this;
    }

    @Override
    public RemindersRecord value6(LocalDateTime value) {
        setExpiry(value);
        return this;
    }

    @Override
    public RemindersRecord values(Long value1, Long value2, Long value3, Long value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RemindersRecord
     */
    public RemindersRecord() {
        super(Reminders.REMINDERS);
    }

    /**
     * Create a detached, initialised RemindersRecord
     */
    public RemindersRecord(Long id, Long guildId, Long userId, Long channelId, String reminderText, LocalDateTime expiry) {
        super(Reminders.REMINDERS);

        setId(id);
        setGuildId(guildId);
        setUserId(userId);
        setChannelId(channelId);
        setReminderText(reminderText);
        setExpiry(expiry);
    }
}
